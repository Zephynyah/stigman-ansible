---
- name: Validate parameters
  ansible.builtin.assert:
    that:
      - nginx.service_name is defined
      - nginx.key_file is defined
      - nginx.crt_file is defined
      - nginx.csr_file is defined
      - nginx.siteconf_file is defined
      - nginx_ssl_generate_self_signed_certs is defined
    quiet: true
  tags:
    - nginx

- name: Ensure required packages are installed
  ansible.builtin.include_role:
    name: common
    tasks_from: fastpackages
  vars:
    packages_list:
      - nginx
      - openssl
  tags:
    - nginx

- name: Ensure nginx in a running state
  ansible.builtin.systemd:
    name: nginx
    state: started
  register: nginxDetails
  until: nginxDetails.status.ActiveState == "active"
  retries: 10
  delay: 3
  tags:
    - nginx

- name: Set httpd_can_network_connect flag on and keep it persistent across reboots
  become: true
  command: setsebool httpd_can_network_connect on -P
  when:
    - nginx_httpd_can_network_connect_enabled == True
  tags:
    - nginx
    - setsebool

- name: Stat nginx configuration
  stat:
    path: /etc/nginx/nginx.conf
  register: siteconfig_stat
  tags:
    - nginx

- name: Stat nginx certificate
  stat:
    path: "{{ nginx.crt_file }}"
  register: sitecert_stat
  tags:
    - nginx

- name: Stat nginx key
  stat:
    path: "{{ nginx.key_file }}"
  register: sitekey_stat
  tags:
    - nginx

- name: Stat nginx configuration
  stat:
    path: /etc/nginx/nginx.conf.org
  register: configuration_stat
  tags:
    - nginx

- name: Backup nginx configuration
  copy:
    src: /etc/nginx/nginx.conf
    dest: /etc/nginx/nginx.conf.org
  when: configuration_stat.stat.exists == False
  tags:
    - nginx


- name: Include OpenSSL for Selfsigned certificate
  ansible.builtin.include_tasks: openssl.yml
  tags:
    - openssl

- name: "Configure nginx server conf file. {{ nginx.siteconf_file }}"
  template:
    src: 'server.conf.j2'
    dest: "{{ nginx.siteconf_file }}"
    group: 'root'
    owner: 'root'
    mode: '0644'
  register: nginx_register_nginx_config
  notify:
    - Test nginx and reload
  tags:
    - nginx

- name: PPatch the nginx config file 'worker_connections'
  ansible.builtin.replace:
    dest: /etc/nginx/nginx.conf
    regexp: '^(.*){{ item.regexp }}(.*)$'
    replace: '{{ item.replace }}'
    owner: nginx
    group: nginx
    mode: 644
  with_items:
    - { regexp: 'worker_connections', replace: '     worker_connections 4096;' }
  notify:
    - Test nginx and restart
  tags:
    - nginx