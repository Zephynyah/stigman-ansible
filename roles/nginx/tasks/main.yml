---
- name: Validate parameters
  ansible.builtin.assert:
    that:
      - nginx.key_file is defined
      - nginx.certificate_file is defined
      - nginx.siteconf_file is defined
      - nginx_ssl_generate_self_signed_certs is defined
    quiet: true

- name: Ensure required packages are installed
  ansible.builtin.include_role:
    name: common
    tasks_from: fastpackages
  vars:
    packages_list:
      - nginx
      - openssl

- name: Ensure nginx in a running state
  ansible.builtin.systemd:
    name: nginx
    state: started
  register: nginxDetails
  until: nginxDetails.status.ActiveState == "active"
  retries: 10
  delay: 3

- name: Wait for service 'nginx' to be running
  ansible.builtin.service_facts:
  register: result
  until: result.ansible_facts.services['nginx.service'].state == 'running'
  retries: 10
  delay: 3

- name: Stat nginx configuration
  stat:
    path: /etc/nginx/nginx.conf
  register: siteconfig_stat

- name: Stat nginx certificate
  stat:
    path: "{{ nginx.certificate_file }}"
  register: sitecert_stat

- name: Stat nginx key
  stat:
    path: "{{ nginx.key_file }}"
  register: sitekey_stat

- name: Stat nginx configuration
  stat:
    path: /etc/nginx/nginx.conf.org
  register: configuration_stat

- name: Backup nginx configuration
  copy:
    src: /etc/nginx/nginx.conf
    dest: /etc/nginx/nginx.conf.org
  when: configuration_stat.stat.exists == False

# Create the nginx private directory
- name: creating nginx private directory
  file:
    path: "{{ nginx.ssl_private_dir }}"
    state: directory
    owner: nginx
    group: nginx
    mode: 0775
    recurse: yes

# Generate a self signed certificate for the web service
- name: generate self signed certificate
  command: >
    openssl req
      -config {{ nginx_openssl_conf }}
      -newkey rsa
      -x509
      -days 365
      -keyout {{ nginx.key_file }}
      -out {{ nginx.certificate_file }}
  #when:
    #- sitecert_stat.stat.exists == False
    #- nginx_ssl_generate_self_signed_certs == True
  notify:
    - Test nginx and restart

- name: Configure nginx
  template:
    src: 'server.conf.j2'
    dest: "{{ nginx.siteconf_file }}"
    group: 'root'
    owner: 'root'
    mode: '0644'
  register: nginx_register_nginx_config
  notify:
    - Test nginx and reload

# Patch the nginx config file 'worker_connections'
- name: Patch the nginx config
  ansible.builtin.replace:
    dest: /etc/nginx/nginx.conf
    regexp: '^(.*){{ item.regexp }}(.*)$'
    replace: '{{ item.replace }}'
    owner: nginx
    group: nginx
    mode: 644
  with_items:
    - { regexp: 'worker_connections', replace: '     worker_connections 4096;' }
    # - { regexp: '#ssl_certificate_key', replace: 'ssl_certificate_key' }
    # - { regexp: '#ssl_certificate', replace: 'ssl_certificate' }
  notify:
    - Test nginx and restart
