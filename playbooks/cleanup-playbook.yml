---
- name: Clean server installation
  hosts: localhost
  gather_facts: true
  become: yes
  become_method: sudo  
  ignore_errors: true
  vars:
    keycloak_version: 24.0.4
    stigman_version: 1.4.12
    watcher_version: 1.4.4
    mysql_db: stigman
    mysql_db_user: stigman

  tasks:
    - command: hostname -f
      register: result

    - name: Ensure stigman DB user is removed form database
      ansible.builtin.user:
        name: "{{ mysql_db_user }}"
        state: absent
        remove: yes

    - name: Ensure stigman DB is removed from database
      mysql_db:
        name: "{{ mysql_db }}"
        state: absent

    - name: Ensure all services are stopped & disabled
      become: true
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: false
        state: stopped
      with_items:
        - mysqld
        - keycloak
        - stigman
        - nginx
        - watcher

    - name: Ensure removal of mysql and its dependencies
      ansible.builtin.dnf:
        name: 
          - mysql-server
          - mysql-client 
        state: absent
        autoremove: yes

    - name: Ensure removal of persistent facts from ansible.builtin.set_fact
      ansible.builtin.meta: clear_facts

    - name: Ensure absence of mysql
      become: true
      ansible.builtin.file:
        name: "{{ item }}"
        state: absent
      with_items:
        - /etc/mysql 
        - /var/lib/mysql 

    - name: Ensure absence of kecloak
      become: true
      ansible.builtin.file:
        name: "{{ item }}"
        state: absent
      with_items:
        - /etc/ansible/facts.d/keycloak.fact
        - /etc/sysconfig/keycloak
        - /etc/systemd/system/keycloak.service
        - /opt/keycloak-{{ keycloak_version }}/
        - /opt/keycloak-{{ keycloak_version }}.tar.gz


    - name: Ensure absence of stig-manager
      become: true
      ansible.builtin.file:
        name: "{{ item }}"
        state: absent
      with_items:
        - /etc/systemd/system/stigman.service
        - "/opt/stig-manager-{{ stigman_version }}/"
        - "/opt/stig-manager-linux-{{ stigman_version }}.tar.xz"

    - name: Ensure absence of stigman-watcher
      become: true
      ansible.builtin.file:
        name: "{{ item }}"
        state: absent
      with_items:
        - /etc/systemd/system/watcher.service
        - /opt/stigman-watcher-{{ watcher_version }}/
        - /opt/stigman-watcher-linux-{{ watcher_version }}.tar.gz

    - name: Delete old nginx configuration before restore
      ansible.builtin.file:
        path: /etc/nginx/nginx.conf
        state: absent

    - name: Restore nginx configuration
      copy:
        src: /etc/nginx/nginx.conf.org
        dest: /etc/nginx/nginx.conf

    - name: Ensure absence of nginx
      become: true
      ansible.builtin.file:
        name: "{{ item }}"
        state: absent
      with_items:
        - /etc/pki/nginx/{{ result.stdout }}.crt
        - /etc/pki/nginx/private/{{ result.stdout }}.key
        - /etc/nginx/conf.d/{{ result.stdout }}.conf
        - /etc/nginx/conf.d/server.conf

    - name: Ensure removal of nginx and its dependencies
      ansible.builtin.dnf:
        name: 
          - nginx 
        state: absent
        autoremove: yes

    - name: Set httpd_can_network_connect flag off
      seboolean:
        name: httpd_can_network_connect
        state: no
        persistent: no






